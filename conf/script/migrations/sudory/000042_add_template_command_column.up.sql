
-- alter template_command_v2 tables
ALTER TABLE `template_command_v2`
	ADD COLUMN IF NOT EXISTS `category` VARCHAR(255) NOT NULL DEFAULT '' COLLATE 'utf8mb4_bin' AFTER `client_version`;

--	https://docs.google.com/spreadsheets/d/10wrB8MjRswGTaN_oDAS-f2J5O2qwi5tMc_6dHnj5_y4/edit#gid=285776016
--	use sudory;
--	template_command_v2
-- kubernetes	
-- k8s.group_version: v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.pods.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.pods.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.namespaces.get.v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.namespaces.list.v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.configmaps.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.configmaps.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.events.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.events.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.nodes.get.v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.nodes.list.v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumes.get.v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumes.list.v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.secrets.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.secrets.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.endpoints.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.endpoints.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumeclaims.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumeclaims.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.services.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.services.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.limitranges.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.limitranges.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.podtemplates.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.podtemplates.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.replicationcontrollers.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.replicationcontrollers.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.resourcequotas.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.resourcequotas.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.serviceaccounts.get.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.serviceaccounts.list.v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.pods.delete.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.configmaps.patch.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumeclaims.patch.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.persistentvolumes.patch.v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.pods.exec.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"command":{"type":"string","pattern":"^."},"container_name":{"type":"string","pattern":"^."}},"required":["namespace","name","command"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.services.patch.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.secrets.patch.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.endpoints.patch.v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.namespaces.patch.v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: apps/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.deployments.get.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.deployments.list.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.statefulsets.get.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.statefulsets.list.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.daemonsets.get.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.daemonsets.list.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.replicasets.get.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.replicasets.list.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.controllerrevisions.get.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.controllerrevisions.list.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.daemonsets.patch.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.deployments.patch.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.statefulsets.patch.apps/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: networking.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.ingresses.get.networking.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.ingresses.list.networking.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.ingressclasses.get.networking.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.ingressclasses.list.networking.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.networkpolicies.get.networking.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.networkpolicies.list.networking.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.ingresses.patch.networking.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: storage.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.storageclasses.get.storage.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.storageclasses.list.storage.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csidrivers.get.storage.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csidrivers.list.storage.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csinodes.get.storage.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csinodes.list.storage.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csistoragecapacities.get.storage.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.csistoragecapacities.list.storage.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.volumeattachments.get.storage.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.volumeattachments.list.storage.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: monitoring.coreos.com/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheuses.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheuses.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheusrules.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheusrules.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.servicemonitors.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.servicemonitors.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagers.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagers.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.podmonitors.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.podmonitors.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.probes.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.probes.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.thanosrulers.get.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.thanosrulers.list.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheuses.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.prometheusrules.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.servicemonitors.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagers.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.podmonitors.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.probes.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.thanosrulers.patch.monitoring.coreos.com/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: monitoring.coreos.com/v1alpha1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagerconfigs.get.monitoring.coreos.com/v1alpha1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagerconfigs.list.monitoring.coreos.com/v1alpha1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.alertmanagerconfigs.patch.monitoring.coreos.com/v1alpha1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: batch/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.cronjobs.get.batch/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.jobs.list.batch/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.cronjobs.list.batch/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.jobs.get.batch/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.cronjobs.patch.batch/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: admissionregistration.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.mutatingwebhookconfigurations.get.admissionregistration.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.mutatingwebhookconfigurations.list.admissionregistration.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.validatingwebhookconfigurations.get.admissionregistration.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.validatingwebhookconfigurations.list.admissionregistration.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: apiextensions.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.customresourcedefinitions.get.apiextensions.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.customresourcedefinitions.list.apiextensions.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: apiregistration.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.apiservices.get.apiregistration.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.apiservices.list.apiregistration.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: autoscaling/v2	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.horizontalpodautoscalers.get.autoscaling/v2', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.horizontalpodautoscalers.list.autoscaling/v2', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.horizontalpodautoscalers.patch.autoscaling/v2', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: certificates.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.certificatesigningrequests.get.certificates.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.certificatesigningrequests.list.certificates.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: coordination.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.leases.get.coordination.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.leases.list.coordination.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: discovery.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.endpointslices.get.discovery.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.endpointslices.list.discovery.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: node.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.runtimeclasses.get.node.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.runtimeclasses.list.node.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: policy/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.poddisruptionbudgets.get.policy/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.poddisruptionbudgets.list.policy/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: rbac.authorization.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterrolebindings.get.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterrolebindings.list.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterroles.get.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterroles.list.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.rolebindings.get.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.rolebindings.list.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.roles.get.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern" : "^."},"name":{"type":"string","pattern" : "^."}},"required":["namespace","name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.roles.list.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string"},"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterrolebindings.patch.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.clusterroles.patch.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.rolebindings.patch.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.roles.patch.rbac.authorization.k8s.io/v1', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"patch_type":{"type":"string","enum":["json","merge"]}},"required":["namespace","name","patch_type"],"dependentRequired":{"patch_type":["patch_data"]},"additionalProperties":false,"if":{"properties":{"patch_type":{"const":"json"}}},"then":{"properties":{"patch_data":{"type":"array","items":{"oneOf":[{"additionalProperties":false,"required":["value","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["add","replace","test"]},"value":{"description":"The value to add, replace or test."}}},{"additionalProperties":false,"required":["op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["remove"]}}},{"additionalProperties":false,"required":["from","op","path"],"properties":{"path":{"$ref":"#/$defs/path"},"op":{"description":"The operation to perform.","type":"string","enum":["move","copy"]},"from":{"$ref":"#/$defs/path","description":"A JSON Pointer path pointing to the location to move/copy from."}}}]}}}},"else":{"properties":{"patch_data":{"type":"object"}}},"$defs":{"path":{"description":"A JSON Pointer path.","type":"string"}}}', '', '0', 'kubernetes', NOW());
-- kubernetes	
-- k8s.group_version: scheduling.k8s.io/v1	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.priorityclasses.get.scheduling.k8s.io/v1', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."}},"required":["name"]}', '', '0', 'kubernetes', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('kubernetes.priorityclasses.list.scheduling.k8s.io/v1', '', '{"type":"object","properties":{"labels":{"type":"object","additionalProperties":{"type":"string"}}}}', '', '0', 'kubernetes', NOW());
-- p8s	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.query.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."},"query":{"type":"string","pattern" : "^."},"time":{"type":"string"}},"required":["url","query"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.query_range.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."},"query":{"type":"string","pattern" : "^."},"start":{"type":"string","pattern" : "^."},"end":{"type":"string","pattern" : "^."},"step":{"type":"string","pattern" : "^."}},"required":["url","query","start","end","step"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.alerts.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."}},"required":["url"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.rules.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."}},"required":["url"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.alertmanagers.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."}},"required":["url"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.targets.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."}},"required":["url"]}', '', '0', 'prometheus', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('prometheus.targets/metadata.v1', '', '{"type":"object","properties":{"url":{"type":"string","pattern" : "^."},"match_target":{"type":"string"},"metric":{"type":"string"},"limit":{"type":"string"}},"required":["url"]}', '', '0', 'prometheus', NOW());
-- helm	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.install', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"chart_name":{"type":"string","pattern":"^."},"repo_url":{"type":"string","pattern":"^."},"repo_name":{"type":"string","pattern":"^."},"namespace":{"type":"string","pattern":"^."},"chart_version":{"type":"string"},"values":{"type":"object"}},"oneOf":[{"required":["name","chart_name","repo_url","namespace"]},{"required":["name","chart_name","repo_name","namespace"]}]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.uninstall', '', '{"type":"object","properties":{"name":{"type":"string","pattern" : "^."},"namespace":{"type":"string","pattern" : "^."}},"required":["name","namespace"]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.upgrade', '', '{"type":"object","properties":{"name":{"type":"string","pattern":"^."},"chart_name":{"type":"string","pattern":"^."},"repo_url":{"type":"string","pattern":"^."},"repo_name":{"type":"string","pattern":"^."},"namespace":{"type":"string","pattern":"^."},"chart_version":{"type":"string"},"values":{"type":"object"},"reuse_values":{"type":"boolean"}},"oneOf":[{"required":["name","chart_name","repo_url","namespace"]},{"required":["name","chart_name","repo_name","namespace"]}]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.get_values', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"all":{"type":"boolean"}},"required":["namespace","name"]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.repo_add', '', '{"type":"object","properties":{"repo_url":{"type":"string","pattern":"^."},"repo_name":{"type":"string","pattern":"^."}},"required":["repo_url","repo_name"]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.repo_list', '', '{}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.repo_update', '', '{"type":"object","properties":{"repo_name":{"type":"string","pattern":"^."}},"required":["repo_name"]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.history', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."}},"required":["namespace","name"]}', '', '0', 'helm', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('helm.rollback', '', '{"type":"object","properties":{"namespace":{"type":"string","pattern":"^."},"name":{"type":"string","pattern":"^."},"revision":{"type":"integer"}},"required":["namespace","name"]}', '', '0', 'helm', NOW());
-- alertmanager	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('alertmanager.silences.get.v2', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"silence_id":{"type":"string","pattern":"^.","format":"uuid"}},"required":["url","silence_id"]}', '', '0', 'alertmanager', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('alertmanager.silences.list.v2', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"filter":{"type":"array","items":{"type":"string"}}},"required":["url"]}', '', '0', 'alertmanager', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('alertmanager.silences.create.v2', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"author":{"type":"string","pattern":"^."},"start":{"type":"string","format":"date-time"},"end":{"type":"string","format":"date-time"},"comment":{"type":"string"},"matchers":{"type":"array","items":{"type":"string"},"minItems":1}},"required":["url","author","start","end","matchers"]}', '', '0', 'alertmanager', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('alertmanager.silences.delete.v2', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"silence_id":{"type":"string","pattern":"^.","format":"uuid"}},"required":["url","silence_id"]}', '', '0', 'alertmanager', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('alertmanager.silences.update.v2', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"silence_id":{"type":"string","pattern" : "^.","format":"uuid"},"start":{"type":"string","format":"date-time"},"end":{"type":"string","format":"date-time"},"comment":{"type":"string"}},"required":["url","silence_id"]}', '', '0', 'alertmanager', NOW());
-- sudoryclient	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.client_pod.rebounce', '', '{}', '', '0', 'sudory', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.client.upgrade', '', '{"type":"object","properties":{"image_tag":{"type":"string","pattern":"^."},"timeout":{"type":"integer"}},"required":["image_tag"]}', '', '0', 'sudory', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.credential.add', '', '{"type":"object","properties":{"credentials":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["grafana","openstack"]},"data":{"type":["string","object"]}},"required":["type"],"dependentRequired":{"type":["data"]},"additionalProperties":false,"if":{"properties":{"type":{"const":"grafana"}}},"then":{"properties":{"data":{"type":"string"}}},"else":{"properties":{"data":{"type":"object"}}}}}},"required":["credentials"]}', '', '0', 'sudory', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.credential.get', '', '{}', '', '0', 'sudory', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.credential.update', '', '{"type":"object","properties":{"credentials":{"type":"object","additionalProperties":{"type":"object","properties":{"type":{"type":"string","enum":["grafana","openstack"]},"data":{"type":["string","object"]}},"required":["type"],"dependentRequired":{"type":["data"]},"additionalProperties":false,"if":{"properties":{"type":{"const":"grafana"}}},"then":{"properties":{"data":{"type":"string"}}},"else":{"properties":{"data":{"type":"object"}}}}}},"required":["credentials"]}', '', '0', 'sudory', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('sudory.credential.remove', '', '{"type":"object","properties":{"credential_keys":{"type":"array","items":{"type":"string"}}},"required":["credential_keys"]}', '', '0', 'sudory', NOW());
-- grafana	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('grafana.datasources.get', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"credential_key":{"type":"string","pattern":"^."},"datasource_id":{"type":"string","pattern":"^."},"datasource_uid":{"type":"string","pattern":"^."},"datasource_name":{"type":"string","pattern":"^."}},"required":["url","credential_key"],"oneOf":[{"required":["datasource_id"]},{"required":["datasource_uid"]},{"required":["datasource_name"]}]}', '', '0', 'grafana', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('grafana.datasources.list', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"credential_key":{"type":"string","pattern":"^."}},"required":["url","credential_key"]}', '', '0', 'grafana', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('grafana.datasources.delete', '', '{"type":"object","properties":{"url":{"type":"string","pattern":"^."},"credential_key":{"type":"string","pattern":"^."},"datasource_id":{"type":"string","pattern":"^."},"datasource_uid":{"type":"string","pattern":"^."},"datasource_name":{"type":"string","pattern":"^."}},"required":["url","credential_key"],"oneOf":[{"required":["datasource_id"]},{"required":["datasource_uid"]},{"required":["datasource_name"]}]}', '', '0', 'grafana', NOW());
-- openstack	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.identity.projects.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.identity.projects.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.servers.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.servers.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.networks.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.networks.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.routers.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.routers.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.subnets.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.networking.subnets.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.hypervisors.get', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key","id"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.hypervisors.list', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"query":{"type":"object","additionalProperties":{"type":"string"}},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.servers.reboot', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."},"reboot_type":{"type":"string","enum":["HARD","SOFT"]},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key","id","reboot_type"]}', '', '0', 'openstack', NOW());
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('openstack.compute.servers.resize', '', '{"type":"object","properties":{"credential_key":{"type":"string","pattern":"^."},"id":{"type":"string","pattern":"^."},"resize_flavorRef":{"type":"string","pattern":"^."},"resize_diskConfig":{"type":"string","enum":["AUTO","MANUAL"]},"microversion":{"type":"string","pattern":"^."}},"required":["credential_key","id","resize_flavorRef"]}', '', '0', 'openstack', NOW());
-- jq	
	REPLACE INTO `template_command_v2` (`name`, `summary`, `inputs`, `outputs`, `client_version`, `category`, `created`) VALUES ('jq', '', '{"type":"object","properties":{"input":{},"filter":{"type":"string","pattern":"^."}},"required":["input","filter"]}', '', '0', 'jq', NOW());
