// Code generated by Ice-cream-maker DO NOT EDIT.
package v2
 
func (Service_essential) ColumnNames() []string {
	return []string{
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
	}
}
 
func (Service) ColumnNames() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
	}
}
 
func (ServiceStatus_essential) ColumnNames() []string {
	return []string{
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
	}
}
 
func (ServiceStatus) ColumnNames() []string {
	return []string{
 		"uuid",
 		"created",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
	}
}
 
func (ServiceResults_essential) ColumnNames() []string {
	return []string{
 		"result_type",
 		"result",
	}
}
 
func (ServiceResult) ColumnNames() []string {
	return []string{
 		"uuid",
 		"created",
 		"result_type",
 		"result",
	}
}
 
func (Service_tangled) ColumnNames() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
 		"result_type",
 		"result",
 		"updated",
	}
}
 
func (Service_status) ColumnNames() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
 		"updated",
	}
}
 
func (ServiceStep_essential) ColumnNames() []string {
	return []string{
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
	}
}
 
func (ServiceStep) ColumnNames() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
	}
}
 
func (ServiceStepStatus_essential) ColumnNames() []string {
	return []string{
 		"status",
 		"started",
 		"ended",
	}
}
 
func (ServiceStepStatus) ColumnNames() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"status",
 		"started",
 		"ended",
	}
}
 
func (ServiceStep_tangled) ColumnNames() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
 		"status",
 		"started",
 		"ended",
 		"updated",
	}
}
 
func (Service_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
	}
}
 
func (Service) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
	}
}
 
func (ServiceStatus_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
	}
}
 
func (ServiceStatus) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"created",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
	}
}
 
func (ServiceResults_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"result_type",
 		"result",
	}
}
 
func (ServiceResult) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"created",
 		"result_type",
 		"result",
	}
}
 
func (Service_tangled) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
 		"result_type",
 		"result",
 		"updated",
	}
}
 
func (Service_status) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"created",
 		"name",
 		"summary",
 		"cluster_uuid",
 		"template_uuid",
 		"step_count",
 		"subscribed_channel",
 		"assigned_client_uuid",
 		"step_position",
 		"status",
 		"message",
 		"updated",
	}
}
 
func (ServiceStep_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
	}
}
 
func (ServiceStep) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
	}
}
 
func (ServiceStepStatus_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"status",
 		"started",
 		"ended",
	}
}
 
func (ServiceStepStatus) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"status",
 		"started",
 		"ended",
	}
}
 
func (ServiceStep_tangled) ColumnNamesWithAlias() []string {
	return []string{
 		"uuid",
 		"sequence",
 		"created",
 		"name",
 		"summary",
 		"method",
 		"args",
 		"result_filter",
 		"status",
 		"started",
 		"ended",
 		"updated",
	}
}
 
func (row Service_essential) Values() []interface{} {
	return []interface{}{
		row.Name,
		row.Summary,
		row.ClusterUuid,
		row.TemplateUuid,
		row.StepCount,
		row.SubscribedChannel,
	}
}
 
func (row Service) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Created,
		row.Name,
		row.Summary,
		row.ClusterUuid,
		row.TemplateUuid,
		row.StepCount,
		row.SubscribedChannel,
	}
}
 
func (row ServiceStatus_essential) Values() []interface{} {
	return []interface{}{
		row.AssignedClientUuid,
		row.StepPosition,
		row.Status,
		row.Message,
	}
}
 
func (row ServiceStatus) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Created,
		row.AssignedClientUuid,
		row.StepPosition,
		row.Status,
		row.Message,
	}
}
 
func (row ServiceResults_essential) Values() []interface{} {
	return []interface{}{
		row.ResultType,
		row.Result,
	}
}
 
func (row ServiceResult) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Created,
		row.ResultType,
		row.Result,
	}
}
 
func (row Service_tangled) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Created,
		row.Name,
		row.Summary,
		row.ClusterUuid,
		row.TemplateUuid,
		row.StepCount,
		row.SubscribedChannel,
		row.AssignedClientUuid,
		row.StepPosition,
		row.Status,
		row.Message,
		row.ResultType,
		row.Result,
		row.Updated,
	}
}
 
func (row Service_status) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Created,
		row.Name,
		row.Summary,
		row.ClusterUuid,
		row.TemplateUuid,
		row.StepCount,
		row.SubscribedChannel,
		row.AssignedClientUuid,
		row.StepPosition,
		row.Status,
		row.Message,
		row.Updated,
	}
}
 
func (row ServiceStep_essential) Values() []interface{} {
	return []interface{}{
		row.Name,
		row.Summary,
		row.Method,
		row.Args,
		row.ResultFilter,
	}
}
 
func (row ServiceStep) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Sequence,
		row.Created,
		row.Name,
		row.Summary,
		row.Method,
		row.Args,
		row.ResultFilter,
	}
}
 
func (row ServiceStepStatus_essential) Values() []interface{} {
	return []interface{}{
		row.Status,
		row.Started,
		row.Ended,
	}
}
 
func (row ServiceStepStatus) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Sequence,
		row.Created,
		row.Status,
		row.Started,
		row.Ended,
	}
}
 
func (row ServiceStep_tangled) Values() []interface{} {
	return []interface{}{
		row.Uuid,
		row.Sequence,
		row.Created,
		row.Name,
		row.Summary,
		row.Method,
		row.Args,
		row.ResultFilter,
		row.Status,
		row.Started,
		row.Ended,
		row.Updated,
	}
}

type Scanner interface {
	Scan(dest ...interface{}) error
}
 
func (row *Service_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
	)
}
 
func (row *Service) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
	)
}
 
func (row *ServiceStatus_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
	)
}
 
func (row *ServiceStatus) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Created,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
	)
}
 
func (row *ServiceResults_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.ResultType,
		&row.Result,
	)
}
 
func (row *ServiceResult) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Created,
		&row.ResultType,
		&row.Result,
	)
}
 
func (row *Service_tangled) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
		&row.ResultType,
		&row.Result,
		&row.Updated,
	)
}
 
func (row *Service_status) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
		&row.Updated,
	)
}
 
func (row *ServiceStep_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
	)
}
 
func (row *ServiceStep) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
	)
}
 
func (row *ServiceStepStatus_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Status,
		&row.Started,
		&row.Ended,
	)
}
 
func (row *ServiceStepStatus) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Status,
		&row.Started,
		&row.Ended,
	)
}
 
func (row *ServiceStep_tangled) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
		&row.Status,
		&row.Started,
		&row.Ended,
		&row.Updated,
	)
}
 
func (row *Service_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
	}
}
 
func (row *Service) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
	}
}
 
func (row *ServiceStatus_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
	}
}
 
func (row *ServiceStatus) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Created,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
	}
}
 
func (row *ServiceResults_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.ResultType,
		&row.Result,
	}
}
 
func (row *ServiceResult) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Created,
		&row.ResultType,
		&row.Result,
	}
}
 
func (row *Service_tangled) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
		&row.ResultType,
		&row.Result,
		&row.Updated,
	}
}
 
func (row *Service_status) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.ClusterUuid,
		&row.TemplateUuid,
		&row.StepCount,
		&row.SubscribedChannel,
		&row.AssignedClientUuid,
		&row.StepPosition,
		&row.Status,
		&row.Message,
		&row.Updated,
	}
}
 
func (row *ServiceStep_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
	}
}
 
func (row *ServiceStep) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
	}
}
 
func (row *ServiceStepStatus_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.Status,
		&row.Started,
		&row.Ended,
	}
}
 
func (row *ServiceStepStatus) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Status,
		&row.Started,
		&row.Ended,
	}
}
 
func (row *ServiceStep_tangled) Ptrs() []interface{} {
	return []interface{}{
		&row.Uuid,
		&row.Sequence,
		&row.Created,
		&row.Name,
		&row.Summary,
		&row.Method,
		&row.Args,
		&row.ResultFilter,
		&row.Status,
		&row.Started,
		&row.Ended,
		&row.Updated,
	}
}
