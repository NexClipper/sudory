// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "https://nexclipper.io",
            "email": "jaehoon@nexclipper.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client/auth": {
            "post": {
                "description": "auth client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/auth"
                ],
                "parameters": [
                    {
                        "description": "HttpReqAuth",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2.HttpReqAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "x-sudory-client-token": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/client/service": {
            "get": {
                "security": [
                    {
                        "ClientAuth": []
                    }
                ],
                "description": "get []Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/service"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ClientServicePolling"
                            }
                        },
                        "headers": {
                            "x-sudory-client-token": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ClientAuth": []
                    }
                ],
                "description": "update a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/service"
                ],
                "parameters": [
                    {
                        "description": "HttpReq_ClientServiceUpdate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ClientServiceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-sudory-client-token": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/server/auth": {
            "post": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/auth"
                ],
                "parameters": [
                    {
                        "description": "v2.HttpReq_ServiceAccessToken",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v2.HttpReq_ServiceAccessToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.HttpRsp_AccessTokenResponse"
                        }
                    }
                }
            }
        },
        "/server/channel": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Channel"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Create a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Event_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.Channel_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Channel"
                        }
                    }
                }
            }
        },
        "/server/channel/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Channel"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Update a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.Channel_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Channel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Delete a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channel/{uuid}/notifier_edges": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get channel edges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChannelNotifierEdge"
                            }
                        }
                    }
                }
            }
        },
        "/server/channel/{uuid}/notifier_edges/add": {
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "addtion channel notifier edge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NotifierEdge",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierEdge"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChannelNotifierEdge"
                            }
                        }
                    }
                }
            }
        },
        "/server/channel/{uuid}/notifier_edges/sub": {
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "subtraction channel sub notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Channel Ïùò NotifierEdge",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierEdge"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.ChannelNotifierEdge"
                            }
                        }
                    }
                }
            }
        },
        "/server/channel_notifier/console": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find channel notifier console",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierConsole"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Create a channel notifier console",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "description": "EventNotifierConsole_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierConsole_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierConsole"
                        }
                    }
                }
            }
        },
        "/server/channel_notifier/console/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel notifier Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierConsole"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Update a console channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NotifierConsole_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierConsole_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierConsole"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Delete a channel notifier console",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channel_notifier/rabbitmq": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierRabbitMq"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Create a channel notifier rabbitmq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "description": "NotifierRabbitMq_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierRabbitMq_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierRabbitMq"
                        }
                    }
                }
            }
        },
        "/server/channel_notifier/rabbitmq/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a channel notifier rabbitmq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel notifier Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierRabbitMq"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Update a rabbitmq channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NotifierRabbitMq_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierRabbitMq_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierRabbitMq"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Delete a channel notifier rabbitmq",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channel_notifier/webhook": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find channel notifier webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierWebhook"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Create a channel notifier webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "description": "EventNotifierWebhook_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierWebhook_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierWebhook"
                        }
                    }
                }
            }
        },
        "/server/channel_notifier/webhook/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a channel notifier webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel notifier Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierWebhook"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Update a webhook channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NotifierWebhook_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierWebhook_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.NotifierWebhook"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Delete a channel notifier webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channel_notifier_status": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find channel notifier status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier_status"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.NotifierStatus"
                            }
                        }
                    }
                }
            }
        },
        "/server/channel_notifier_status/{uuid}": {
            "delete": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Delete a channel notifier status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channel_notifier_status"
                ],
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "EventNotifierStatus Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channels": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ManagedChannel"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Create a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "description": "HttpReq_ManagedChannel_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel"
                        }
                    }
                }
            }
        },
        "/server/channels/status": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find channel status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_ChannelStatus"
                            }
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.ManagedChannel"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Delete a channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/channels/{uuid}/format": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a channel format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsq_ManagedChannel_Format"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a channel format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_Format_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_Format_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsq_ManagedChannel_Format"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/notifiers/console": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a console channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_NotifierConsole_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_NotifierConsole_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_NotifierEdge"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/notifiers/edge": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a channel notifier edge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_NotifierEdge"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/notifiers/rabbitmq": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a rabbitmq channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_NotifierRabbitMq_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_NotifierRabbitMq_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_NotifierEdge"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/notifiers/slackhook": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a slackhook channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_NotifierSlackhook_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_NotifierSlackhook_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_NotifierEdge"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/notifiers/webhook": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a webhook channel notifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_NotifierWebhook_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_NotifierWebhook_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_NotifierEdge"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/status": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "List channel status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel status Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_ChannelStatus"
                            }
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/status/option": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a channel status option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_ChannelStatusOption"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a channel status option",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_ManagedChannel_ChannelStatusOption_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ManagedChannel_ChannelStatusOption_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ManagedChannel_ChannelStatusOption"
                        }
                    }
                }
            }
        },
        "/server/channels/{uuid}/status/purge": {
            "delete": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Purge channel status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/channels"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel status Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/cluster": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_Cluster"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Create a cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "description": "HttpReq_Cluster_create",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_Cluster_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Cluster"
                        }
                    }
                }
            }
        },
        "/server/cluster/{uuid}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Cluster"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_Cluster_update",
                        "name": "cluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_Cluster_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Cluster"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Delete a cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/cluster/{uuid}/polling/regular": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a cluster Polling Reguar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "RegularPollingOption",
                        "name": "polling_option",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.RegularPollingOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Cluster"
                        }
                    }
                }
            }
        },
        "/server/cluster/{uuid}/polling/smart": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update a cluster Polling Smart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SmartPollingOption",
                        "name": "polling_option",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.SmartPollingOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Cluster"
                        }
                    }
                }
            }
        },
        "/server/cluster_token": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Create a Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "description": "ClusterToken HttpReq_ClusterToken_create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ClusterToken_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                        }
                    }
                }
            }
        },
        "/server/cluster_token/{uuid}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClusterToken Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Delete a Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClusterToken Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/cluster_token/{uuid}/expire": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Expire Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClusterToken Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                        }
                    }
                }
            }
        },
        "/server/cluster_token/{uuid}/label": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Update Label of Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClusterToken Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterToken HttpReq_ClusterToken_update",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_ClusterToken_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                        }
                    }
                }
            }
        },
        "/server/cluster_token/{uuid}/refresh": {
            "put": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Refresh Time of Cluster Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/cluster_token"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClusterToken Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ClusterToken"
                        }
                    }
                }
            }
        },
        "/server/global_variables": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find GlobalVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/global_variables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.GlobalVariables"
                            }
                        }
                    }
                }
            }
        },
        "/server/global_variables/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a GlobalVariables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/global_variables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "GlobalVariables Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.GlobalVariables"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Update GlobalVariables Value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/global_variables"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "GlobalVariables Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HttpReq_GlobalVariables_update",
                        "name": "enviroment",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/v2.HttpReq_GlobalVariables_update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.GlobalVariables"
                        }
                    }
                }
            }
        },
        "/server/service": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find []Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_Service"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Create a Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "description": "HttpReq_Service_create",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v3.HttpReq_Service_create"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Service_create"
                        }
                    }
                }
            }
        },
        "/server/service/step": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find Service Steps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ServiceStep"
                            }
                        }
                    }
                }
            }
        },
        "/server/service/{uuid}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_Service"
                        }
                    }
                }
            }
        },
        "/server/service/{uuid}/result": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a Service Result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ServiceResult"
                        }
                    }
                }
            }
        },
        "/server/service/{uuid}/step": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get Service Steps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceStep Ïùò uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.HttpRsp_ServiceStep"
                            }
                        }
                    }
                }
            }
        },
        "/server/service/{uuid}/step/{sequence}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get Service Step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/service"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ServiceStep Ïùò uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ServiceStep Ïùò sequence",
                        "name": "sequence",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.HttpRsp_ServiceStep"
                        }
                    }
                }
            }
        },
        "/server/session": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Find Session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/session"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.Session"
                            }
                        }
                    }
                }
            }
        },
        "/server/session/cluster/{cluster_uuid}/alive": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Alive Cluster Session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/session"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster Uuid",
                        "name": "cluster_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/server/session/{uuid}": {
            "get": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Get a Session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/session"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v3.Session"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ServiceAuth": []
                    }
                ],
                "description": "Delete a Session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/session"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/server/template": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find []template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/template"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "query  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order  github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "paging github.com/NexClipper/sudory/pkg/server/database/vanilla/stmt/README.md",
                        "name": "p",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.HttpRsp_Template"
                            }
                        }
                    }
                }
            }
        },
        "/server/template/{template_uuid}/command": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "List template command",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/template_command"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "HttpReqTemplate Uuid",
                        "name": "template_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.HttpRsp_TemplateCommand"
                            }
                        }
                    }
                }
            }
        },
        "/server/template/{template_uuid}/command/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a template command",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/template_command"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "HttpReqTemplate Uuid",
                        "name": "template_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HttpReqTemplateCommand Ïùò Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.HttpRsp_TemplateCommand"
                        }
                    }
                }
            }
        },
        "/server/template/{uuid}": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Get a template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/template"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.HttpRsp_Template"
                        }
                    }
                }
            }
        },
        "/server/template_recipe": {
            "get": {
                "security": [
                    {
                        "XAuthToken": []
                    }
                ],
                "description": "Find TemplateRecipe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server/template_recipe"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template Command Method",
                        "name": "method",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.HttpRsp_TemplateRecipe"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1.Channel": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.ChannelNotifierEdge": {
            "type": "object",
            "properties": {
                "channel_uuid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notifier_type": {
                    "type": "string"
                },
                "notifier_uuid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "v1.Channel_create": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notifier_edges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.NotifierEdge"
                    }
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v1.Channel_update": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierConsole": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierConsole_create": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierEdge": {
            "type": "object",
            "properties": {
                "notifier_type": {
                    "type": "string"
                },
                "notifier_uuid": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierRabbitMq": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "exchange": {
                    "description": "amqp.Channel.Publish",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "immediate": {
                    "type": "boolean"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "message_app_id": {
                    "description": "application use - creating application",
                    "type": "string"
                },
                "message_content_encoding": {
                    "description": "MIME content encoding",
                    "type": "string"
                },
                "message_content_type": {
                    "description": "MIME content type",
                    "type": "string"
                },
                "message_correlation_id": {
                    "description": "application use - correlation identifier",
                    "type": "string"
                },
                "message_delivery_mode": {
                    "description": "queue implementation use - Transient (1) or Persistent (2)",
                    "type": "integer"
                },
                "message_expiration": {
                    "description": "implementation use - message expiration spec",
                    "type": "string"
                },
                "message_headers": {
                    "description": "amqp.Publishing",
                    "type": "object",
                    "additionalProperties": true
                },
                "message_message_id": {
                    "description": "application use - message identifier",
                    "type": "string"
                },
                "message_priority": {
                    "description": "queue implementation use - 0 to 9",
                    "type": "integer"
                },
                "message_reply_to": {
                    "description": "application use - address to to reply to (ex: RPC)",
                    "type": "string"
                },
                "message_timestamp": {
                    "description": "application use - message timestamp",
                    "type": "boolean"
                },
                "message_type": {
                    "description": "application use - message type name",
                    "type": "string"
                },
                "message_user_id": {
                    "description": "application use - creating user id",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "routing_key": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "url": {
                    "description": "amqp Dial",
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierRabbitMq_create": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "exchange": {
                    "description": "amqp.Channel.Publish",
                    "type": "string"
                },
                "immediate": {
                    "type": "boolean"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "message_app_id": {
                    "description": "application use - creating application",
                    "type": "string"
                },
                "message_content_encoding": {
                    "description": "MIME content encoding",
                    "type": "string"
                },
                "message_content_type": {
                    "description": "MIME content type",
                    "type": "string"
                },
                "message_correlation_id": {
                    "description": "application use - correlation identifier",
                    "type": "string"
                },
                "message_delivery_mode": {
                    "description": "queue implementation use - Transient (1) or Persistent (2)",
                    "type": "integer"
                },
                "message_expiration": {
                    "description": "implementation use - message expiration spec",
                    "type": "string"
                },
                "message_headers": {
                    "description": "amqp.Publishing",
                    "type": "object",
                    "additionalProperties": true
                },
                "message_message_id": {
                    "description": "application use - message identifier",
                    "type": "string"
                },
                "message_priority": {
                    "description": "queue implementation use - 0 to 9",
                    "type": "integer"
                },
                "message_reply_to": {
                    "description": "application use - address to to reply to (ex: RPC)",
                    "type": "string"
                },
                "message_timestamp": {
                    "description": "application use - message timestamp",
                    "type": "boolean"
                },
                "message_type": {
                    "description": "application use - message type name",
                    "type": "string"
                },
                "message_user_id": {
                    "description": "application use - creating user id",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "routing_key": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "url": {
                    "description": "amqp Dial",
                    "type": "string"
                }
            }
        },
        "v1.NotifierStatus": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notifier_type": {
                    "type": "string"
                },
                "notifier_uuid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierWebhook": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "description": "http",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "request_timeout": {
                    "description": "for timeout context",
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "v1.NotifierWebhook_create": {
            "type": "object",
            "properties": {
                "Content-Type": {
                    "type": "string"
                },
                "method": {
                    "description": "http",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "request_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "request_timeout": {
                    "description": "for timeout context",
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v2.GlobalVariables": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v2.HttpReqAuth": {
            "type": "object",
            "properties": {
                "assertion": {
                    "description": "\u003cbearer-token\u003e",
                    "type": "string"
                },
                "client_version": {
                    "description": "client version",
                    "type": "string"
                },
                "cluster_uuid": {
                    "description": "cluster uuid",
                    "type": "string"
                }
            }
        },
        "v2.HttpReq_GlobalVariables_update": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "v2.HttpReq_ServiceAccessToken": {
            "type": "object",
            "properties": {
                "tenant": {
                    "description": "tenant",
                    "type": "string"
                }
            }
        },
        "v2.HttpRsp_AccessTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "(required)",
                    "type": "string"
                },
                "expires_in": {
                    "description": "(recommended)",
                    "type": "integer"
                },
                "refresh_token": {
                    "description": "(optional)",
                    "type": "string"
                },
                "scope": {
                    "description": "(optional)",
                    "type": "string"
                },
                "token_type": {
                    "description": "(required)",
                    "type": "string"
                }
            }
        },
        "v2.HttpRsp_Template": {
            "type": "object",
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.TemplateCommand"
                    }
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v2.HttpRsp_TemplateCommand": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "result_filter": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v2.HttpRsp_TemplateRecipe": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "v2.TemplateCommand": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "result_filter": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v3.ChannelStatusOption_property": {
            "type": "object",
            "properties": {
                "status_max_count": {
                    "type": "integer"
                }
            }
        },
        "v3.Format_property": {
            "type": "object",
            "properties": {
                "format_data": {
                    "type": "string"
                },
                "format_type": {
                    "description": "enums:\"disable(0), fields(1), jq(2)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                }
            }
        },
        "v3.HttpReq_ClientServiceUpdate": {
            "type": "object",
            "properties": {
                "ended": {
                    "type": "string"
                },
                "result": {
                    "description": "StepStatus Í∞íÏóê Îî∞Îùº; Í≤∞Í≥º ÌòπÏùÄ ÏóêÎü¨ Î©îÏãúÏßÄ",
                    "type": "string"
                },
                "sequence": {
                    "description": "pk",
                    "type": "integer"
                },
                "started": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ClusterToken_create": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "uuid": {
                    "description": "optional",
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ClusterToken_update": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_Cluster_create": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "polling_limit": {
                    "type": "integer"
                },
                "polling_option": {
                    "type": "object"
                },
                "summary": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_Cluster_update": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "polling_limit": {
                    "type": "integer"
                },
                "polling_option": {
                    "type": "object"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_ChannelStatusOption_update": {
            "type": "object",
            "properties": {
                "status_max_count": {
                    "type": "integer"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_Format_update": {
            "type": "object",
            "properties": {
                "format_data": {
                    "type": "string"
                },
                "format_type": {
                    "description": "enums:\"disable(0), fields(1), jq(2)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                }
            }
        },
        "v3.HttpReq_ManagedChannel_NotifierConsole_update": {
            "type": "object"
        },
        "v3.HttpReq_ManagedChannel_NotifierRabbitMq_update": {
            "type": "object",
            "properties": {
                "channel_publish": {
                    "description": "amqp.Channel.Publish",
                    "type": "object",
                    "properties": {
                        "exchange": {
                            "type": "string"
                        },
                        "immediate": {
                            "type": "boolean"
                        },
                        "mandatory": {
                            "type": "boolean"
                        },
                        "routing_key": {
                            "type": "string"
                        }
                    }
                },
                "publishing": {
                    "description": "amqp.Publishing",
                    "type": "object",
                    "properties": {
                        "message_app_id": {
                            "description": "application use - creating application",
                            "type": "string"
                        },
                        "message_content_encoding": {
                            "description": "MIME content encoding",
                            "type": "string"
                        },
                        "message_content_type": {
                            "description": "MIME content type",
                            "type": "string"
                        },
                        "message_correlation_id": {
                            "description": "application use - correlation identifier",
                            "type": "string"
                        },
                        "message_delivery_mode": {
                            "description": "queue implementation use - Transient (1) or Persistent (2)",
                            "type": "integer"
                        },
                        "message_expiration": {
                            "description": "implementation use - message expiration spec",
                            "type": "string"
                        },
                        "message_headers": {
                            "description": "Application or header exchange table",
                            "type": "object"
                        },
                        "message_message_id": {
                            "description": "application use - message identifier",
                            "type": "string"
                        },
                        "message_priority": {
                            "description": "queue implementation use - 0 to 9",
                            "type": "integer"
                        },
                        "message_reply_to": {
                            "description": "application use - address to to reply to (ex: RPC)",
                            "type": "string"
                        },
                        "message_timestamp": {
                            "description": "application use - message timestamp",
                            "type": "boolean"
                        },
                        "message_type": {
                            "description": "application use - message type name",
                            "type": "string"
                        },
                        "message_user_id": {
                            "description": "application use - creating user id",
                            "type": "string"
                        }
                    }
                },
                "url": {
                    "description": "amqp Dial",
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_NotifierSlackhook_update": {
            "type": "object",
            "properties": {
                "request_timeout": {
                    "description": "second",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_NotifierWebhook_update": {
            "type": "object",
            "properties": {
                "method": {
                    "description": "http",
                    "type": "string"
                },
                "request_headers": {
                    "type": "object"
                },
                "request_timeout": {
                    "description": "second",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_create": {
            "type": "object",
            "properties": {
                "event_category": {
                    "description": "enums:\"NaV(0), nonspecified(1), client-auth(2), client-polling-out(3), client-polling-in(4)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "uuid": {
                    "description": "optional",
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_ManagedChannel_update": {
            "type": "object",
            "properties": {
                "event_category": {
                    "description": "enums:\"NaV(0), nonspecified(1), client-auth(2), client-polling-out(3), client-polling-in(4)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "v3.HttpReq_Service_create": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "args": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "subscribed_channel": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ClientServicePolling": {
            "type": "object",
            "properties": {
                "assigned_client_uuid": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "step_count": {
                    "type": "integer"
                },
                "step_position": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v3.ServiceStep"
                    }
                },
                "subscribed_channel": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_Cluster": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "polling_limit": {
                    "type": "integer"
                },
                "polling_option": {
                    "type": "object"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ClusterToken": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "expiration_time": {
                    "type": "string"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "issued_at_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ManagedChannel": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "event_category": {
                    "description": "enums:\"NaV(0), nonspecified(1), client-auth(2), client-polling-out(3), client-polling-in(4)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "format": {
                    "$ref": "#/definitions/v3.Format_property"
                },
                "name": {
                    "type": "string"
                },
                "notifiers": {
                    "type": "object",
                    "properties": {
                        "console": {
                            "$ref": "#/definitions/v3.NotifierConsole_property"
                        },
                        "notifier_type": {
                            "description": "enums:\"NaV(0), console(1), webhook(2), rabbitmq(3), slackhook(4)\"",
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4"
                            ]
                        },
                        "rabbitmq": {
                            "$ref": "#/definitions/v3.NotifierRabbitMq_property"
                        },
                        "slackhook": {
                            "$ref": "#/definitions/v3.NotifierSlackhook_property"
                        },
                        "webhook": {
                            "$ref": "#/definitions/v3.NotifierWebhook_property"
                        }
                    }
                },
                "status_option": {
                    "$ref": "#/definitions/v3.ChannelStatusOption_property"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ManagedChannel_ChannelStatus": {
            "type": "object",
            "properties": {
                "created": {
                    "description": "pk",
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ManagedChannel_ChannelStatusOption": {
            "type": "object",
            "properties": {
                "status_max_count": {
                    "type": "integer"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ManagedChannel_NotifierEdge": {
            "type": "object",
            "properties": {
                "console": {
                    "$ref": "#/definitions/v3.NotifierConsole_property"
                },
                "notifier_type": {
                    "description": "enums:\"NaV(0), console(1), webhook(2), rabbitmq(3), slackhook(4)\"",
                    "type": "string",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4"
                    ]
                },
                "rabbitmq": {
                    "$ref": "#/definitions/v3.NotifierRabbitMq_property"
                },
                "slackhook": {
                    "$ref": "#/definitions/v3.NotifierSlackhook_property"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                },
                "webhook": {
                    "$ref": "#/definitions/v3.NotifierWebhook_property"
                }
            }
        },
        "v3.HttpRsp_Service": {
            "type": "object",
            "properties": {
                "assigned_client_uuid": {
                    "type": "string"
                },
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "step_count": {
                    "type": "integer"
                },
                "step_position": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v3.ServiceStep"
                    }
                },
                "subscribed_channel": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ServiceResult": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "result_type": {
                    "type": "integer"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_ServiceStep": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "ended": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "result_filter": {
                    "type": "string"
                },
                "sequence": {
                    "description": "pk tinyint",
                    "type": "integer"
                },
                "started": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsp_Service_create": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "step_count": {
                    "type": "integer"
                },
                "step_position": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v3.ServiceStep_create"
                    }
                },
                "subscribed_channel": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "template_uuid": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.HttpRsq_ManagedChannel_Format": {
            "type": "object",
            "properties": {
                "format_data": {
                    "type": "string"
                },
                "format_type": {
                    "description": "enums:\"disable(0), fields(1), jq(2)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.ManagedChannel": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "string"
                },
                "event_category": {
                    "description": "enums:\"NaV(0), nonspecified(1), client-auth(2), client-polling-out(3), client-polling-in(4)\"",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "uuid": {
                    "description": "pk",
                    "type": "string"
                }
            }
        },
        "v3.NotifierConsole_property": {
            "type": "object"
        },
        "v3.NotifierRabbitMq_property": {
            "type": "object",
            "properties": {
                "channel_publish": {
                    "description": "amqp.Channel.Publish",
                    "type": "object",
                    "properties": {
                        "exchange": {
                            "type": "string"
                        },
                        "immediate": {
                            "type": "boolean"
                        },
                        "mandatory": {
                            "type": "boolean"
                        },
                        "routing_key": {
                            "type": "string"
                        }
                    }
                },
                "publishing": {
                    "description": "amqp.Publishing",
                    "type": "object",
                    "properties": {
                        "message_app_id": {
                            "description": "application use - creating application",
                            "type": "string"
                        },
                        "message_content_encoding": {
                            "description": "MIME content encoding",
                            "type": "string"
                        },
                        "message_content_type": {
                            "description": "MIME content type",
                            "type": "string"
                        },
                        "message_correlation_id": {
                            "description": "application use - correlation identifier",
                            "type": "string"
                        },
                        "message_delivery_mode": {
                            "description": "queue implementation use - Transient (1) or Persistent (2)",
                            "type": "integer"
                        },
                        "message_expiration": {
                            "description": "implementation use - message expiration spec",
                            "type": "string"
                        },
                        "message_headers": {
                            "description": "Application or header exchange table",
                            "type": "object"
                        },
                        "message_message_id": {
                            "description": "application use - message identifier",
                            "type": "string"
                        },
                        "message_priority": {
                            "description": "queue implementation use - 0 to 9",
                            "type": "integer"
                        },
                        "message_reply_to": {
                            "description": "application use - address to to reply to (ex: RPC)",
                            "type": "string"
                        },
                        "message_timestamp": {
                            "description": "application use - message timestamp",
                            "type": "boolean"
                        },
                        "message_type": {
                            "description": "application use - message type name",
                            "type": "string"
                        },
                        "message_user_id": {
                            "description": "application use - creating user id",
                            "type": "string"
                        }
                    }
                },
                "url": {
                    "description": "amqp Dial",
                    "type": "string"
                }
            }
        },
        "v3.NotifierSlackhook_property": {
            "type": "object",
            "properties": {
                "request_timeout": {
                    "description": "second",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v3.NotifierWebhook_property": {
            "type": "object",
            "properties": {
                "method": {
                    "description": "http",
                    "type": "string"
                },
                "request_headers": {
                    "type": "object"
                },
                "request_timeout": {
                    "description": "second",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "v3.RegularPollingOption": {
            "type": "object"
        },
        "v3.ServiceStep": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "ended": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "result_filter": {
                    "type": "string"
                },
                "sequence": {
                    "description": "pk tinyint",
                    "type": "integer"
                },
                "started": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.ServiceStep_create": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "object"
                },
                "cluster_uuid": {
                    "description": "pk char(32) cluster.uuid",
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partition_date": {
                    "description": "pk date",
                    "type": "string"
                },
                "result_filter": {
                    "type": "string"
                },
                "sequence": {
                    "description": "pk tinyint",
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "pk datetime(6)",
                    "type": "string"
                },
                "uuid": {
                    "description": "pk char(32) service.uuid",
                    "type": "string"
                }
            }
        },
        "v3.Session": {
            "type": "object",
            "properties": {
                "cluster_uuid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "deleted": {
                    "type": "object"
                },
                "expiration_time": {
                    "type": "object"
                },
                "id": {
                    "description": "pk",
                    "type": "integer"
                },
                "issued_at_time": {
                    "type": "object"
                },
                "token": {
                    "type": "string"
                },
                "updated": {
                    "type": "object"
                },
                "uuid": {
                    "description": "uuid",
                    "type": "string"
                }
            }
        },
        "v3.SmartPollingOption": {
            "type": "object",
            "properties": {
                "busy": {
                    "description": "(Ï¥à)",
                    "type": "integer"
                },
                "idle": {
                    "description": "(Ï¥à)",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ClientAuth": {
            "type": "apiKey",
            "name": "x-sudory-client-token",
            "in": "header"
        },
        "ServiceAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "XAuthToken": {
            "type": "apiKey",
            "name": "x_auth_token",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "SUDORY",
	Description: "limit for access sudory api",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
