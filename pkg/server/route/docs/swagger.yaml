definitions:
  v1.Cluster:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      polling_limit:
        type: integer
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.ClusterToken:
    properties:
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      expiration_time:
        type: string
      id:
        type: integer
      issued_at_time:
        type: string
      name:
        type: string
      summary:
        type: string
      token:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Event:
    properties:
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      pattern:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Event_create:
    properties:
      cluster_uuid:
        type: string
      name:
        type: string
      notifier_edges:
        items:
          $ref: '#/definitions/v1.NotifierEdge'
        type: array
      pattern:
        type: string
      summary:
        type: string
    type: object
  v1.Event_update:
    properties:
      cluster_uuid:
        type: string
      name:
        type: string
      pattern:
        type: string
      summary:
        type: string
    type: object
  v1.EventNotifierConsole:
    properties:
      Content-Type:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.EventNotifierConsole_create:
    properties:
      Content-Type:
        type: string
      name:
        type: string
      summary:
        type: string
    type: object
  v1.EventNotifierEdge:
    properties:
      created:
        type: string
      deleted:
        type: string
      event_uuid:
        type: string
      id:
        type: integer
      notifier_type:
        type: string
      notifier_uuid:
        type: string
      updated:
        type: string
    type: object
  v1.EventNotifierRabbitMq:
    properties:
      Content-Type:
        type: string
      created:
        type: string
      deleted:
        type: string
      exchange:
        description: amqp.Channel.Publish
        type: string
      id:
        type: integer
      immediate:
        type: boolean
      mandatory:
        type: boolean
      message_app_id:
        description: application use - creating application
        type: string
      message_content_encoding:
        description: MIME content encoding
        type: string
      message_content_type:
        description: MIME content type
        type: string
      message_correlation_id:
        description: application use - correlation identifier
        type: string
      message_delivery_mode:
        description: queue implementation use - Transient (1) or Persistent (2)
        type: integer
      message_expiration:
        description: implementation use - message expiration spec
        type: string
      message_headers:
        additionalProperties: true
        description: amqp.Publishing
        type: object
      message_message_id:
        description: application use - message identifier
        type: string
      message_priority:
        description: queue implementation use - 0 to 9
        type: integer
      message_reply_to:
        description: 'application use - address to to reply to (ex: RPC)'
        type: string
      message_timestamp:
        description: application use - message timestamp
        type: boolean
      message_type:
        description: application use - message type name
        type: string
      message_user_id:
        description: application use - creating user id
        type: string
      name:
        type: string
      routing_key:
        type: string
      summary:
        type: string
      updated:
        type: string
      url:
        description: amqp Dial
        type: string
      uuid:
        type: string
    type: object
  v1.EventNotifierRabbitMq_create:
    properties:
      Content-Type:
        type: string
      exchange:
        description: amqp.Channel.Publish
        type: string
      immediate:
        type: boolean
      mandatory:
        type: boolean
      message_app_id:
        description: application use - creating application
        type: string
      message_content_encoding:
        description: MIME content encoding
        type: string
      message_content_type:
        description: MIME content type
        type: string
      message_correlation_id:
        description: application use - correlation identifier
        type: string
      message_delivery_mode:
        description: queue implementation use - Transient (1) or Persistent (2)
        type: integer
      message_expiration:
        description: implementation use - message expiration spec
        type: string
      message_headers:
        additionalProperties: true
        description: amqp.Publishing
        type: object
      message_message_id:
        description: application use - message identifier
        type: string
      message_priority:
        description: queue implementation use - 0 to 9
        type: integer
      message_reply_to:
        description: 'application use - address to to reply to (ex: RPC)'
        type: string
      message_timestamp:
        description: application use - message timestamp
        type: boolean
      message_type:
        description: application use - message type name
        type: string
      message_user_id:
        description: application use - creating user id
        type: string
      name:
        type: string
      routing_key:
        type: string
      summary:
        type: string
      url:
        description: amqp Dial
        type: string
    type: object
  v1.EventNotifierStatus:
    properties:
      created:
        type: string
      deleted:
        type: string
      error:
        type: string
      id:
        type: integer
      notifier_type:
        type: string
      notifier_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.EventNotifierWebhook:
    properties:
      Content-Type:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      method:
        description: http
        type: string
      name:
        type: string
      request_headers:
        additionalProperties:
          type: string
        type: object
      request_timeout:
        description: for timeout context
        type: string
      summary:
        type: string
      updated:
        type: string
      url:
        type: string
      uuid:
        type: string
    type: object
  v1.EventNotifierWebhook_create:
    properties:
      Content-Type:
        type: string
      method:
        description: http
        type: string
      name:
        type: string
      request_headers:
        additionalProperties:
          type: string
        type: object
      request_timeout:
        description: for timeout context
        type: string
      summary:
        type: string
      url:
        type: string
    type: object
  v1.EventWithEdges:
    properties:
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      notifier_edges:
        items:
          $ref: '#/definitions/v1.NotifierEdge'
        type: array
      pattern:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.GlobalVariant:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
      value:
        type: string
    type: object
  v1.Hashset:
    additionalProperties: true
    type: object
  v1.HttpReqAuth:
    properties:
      assertion:
        description: <bearer-token>
        type: string
      client_version:
        description: client version
        type: string
      cluster_uuid:
        description: cluster uuid
        type: string
    type: object
  v1.HttpReqCluster_Create:
    properties:
      name:
        type: string
      polling_limit:
        type: integer
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
    type: object
  v1.HttpReqCluster_Update:
    properties:
      name:
        type: string
      polling_limit:
        type: integer
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
    type: object
  v1.HttpReqClusterToken_Create:
    properties:
      cluster_uuid:
        type: string
      name:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqClusterToken_UpdateLabel:
    properties:
      name:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqGlobalVariant_Update:
    properties:
      value:
        type: string
    type: object
  v1.HttpReqService_ClientSide:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      on_completion:
        description: 서비스 완료 후
        type: integer
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribed_channel:
        description: 서비스 POLL 결과 전달 이벤트 채널 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpReqService_Create:
    properties:
      cluster_uuid:
        type: string
      name:
        type: string
      on_completion:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.HttpReqServiceStep_Create_ByService'
        type: array
      subscribed_channel:
        type: string
      summary:
        type: string
      template_uuid:
        type: string
    type: object
  v1.HttpReqServiceStep_Create_ByService:
    properties:
      args:
        additionalProperties: true
        type: object
    type: object
  v1.HttpReqTemplate_Create:
    properties:
      commands:
        items:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Create_ByTemplate'
        type: array
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplate_Update:
    properties:
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Create:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
      template_uuid:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Create_ByTemplate:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Update:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
    type: object
  v1.HttpRspService:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      on_completion:
        description: 서비스 완료 후
        type: integer
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribed_channel:
        description: 서비스 POLL 결과 전달 이벤트 채널 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpRspService_ClientSide:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      on_completion:
        description: 서비스 완료 후
        type: integer
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribed_channel:
        description: 서비스 POLL 결과 전달 이벤트 채널 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpRspTemplate:
    properties:
      commands:
        items:
          $ref: '#/definitions/v1.TemplateCommand'
        type: array
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.NotifierEdge:
    properties:
      notifier_type:
        type: string
      notifier_uuid:
        type: string
    type: object
  v1.NotifierEdges:
    properties:
      notifier_edges:
        items:
          $ref: '#/definitions/v1.NotifierEdge'
        type: array
    type: object
  v1.RagulerPollingOption:
    type: object
  v1.ServiceStep:
    properties:
      args:
        $ref: '#/definitions/v1.Hashset'
      created:
        type: string
      deleted:
        type: string
      ended:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      service_uuid:
        type: string
      started:
        type: string
      status:
        type: integer
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Session:
    properties:
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      expiration_time:
        type: string
      id:
        type: integer
      issued_at_time:
        type: string
      token:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.SmartPollingOption:
    properties:
      buzy:
        description: (초)
        type: integer
      idle:
        description: (초)
        type: integer
    type: object
  v1.Template:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.TemplateCommand:
    properties:
      args:
        additionalProperties: true
        type: object
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
      template_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.TemplateRecipe:
    properties:
      args:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
    type: object
info:
  contact:
    email: jaehoon@nexclipper.io
    url: https://nexclipper.io
  description: this is a sudory server.
  title: SUDORY
  version: 0.0.1
paths:
  /client/auth:
    post:
      consumes:
      - application/json
      description: Auth a client
      parameters:
      - description: HttpReqAuth
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            x-sudory-client-token:
              description: x-sudory-client-token
              type: string
          schema:
            type: string
      tags:
      - client/auth
  /client/service:
    put:
      consumes:
      - application/json
      description: Poll a Service
      parameters:
      - description: client session token
        in: header
        name: x-sudory-client-token
        required: true
        type: string
      - description: HttpReqService_ClientSide
        in: body
        name: service
        required: true
        schema:
          items:
            $ref: '#/definitions/v1.HttpReqService_ClientSide'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            x-sudory-client-token:
              description: x-sudory-client-token
              type: string
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspService_ClientSide'
            type: array
      tags:
      - client/service
  /server/cluster:
    get:
      consumes:
      - application/json
      description: Find cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Cluster'
            type: array
      tags:
      - server/cluster
    post:
      consumes:
      - application/json
      description: Create a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqCluster_Create
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqCluster_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/cluster
    get:
      consumes:
      - application/json
      description: Get a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
    put:
      consumes:
      - application/json
      description: Update a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqCluster_Update
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqCluster_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}/polling/raguler:
    put:
      consumes:
      - application/json
      description: Update a cluster Polling Reguar
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: RagulerPollingOption
        in: body
        name: polling_option
        required: true
        schema:
          $ref: '#/definitions/v1.RagulerPollingOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}/polling/smart:
    put:
      consumes:
      - application/json
      description: Update a cluster Polling Smart
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: SmartPollingOption
        in: body
        name: polling_option
        required: true
        schema:
          $ref: '#/definitions/v1.SmartPollingOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster_token:
    get:
      consumes:
      - application/json
      description: Find Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.ClusterToken'
            type: array
      tags:
      - server/cluster_token
    post:
      consumes:
      - application/json
      description: Create a Cluster Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqClusterToken_Create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqClusterToken_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterToken'
      tags:
      - server/cluster_token
  /server/cluster_token/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/cluster_token
    get:
      consumes:
      - application/json
      description: Get a Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterToken'
      tags:
      - server/cluster_token
  /server/cluster_token/{uuid}/expire:
    put:
      consumes:
      - application/json
      description: Expire Cluster Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterToken'
      tags:
      - server/cluster_token
  /server/cluster_token/{uuid}/label:
    put:
      consumes:
      - application/json
      description: Update Token Label
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Token 의 HttpReqClusterToken_UpdateLabel
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqClusterToken_UpdateLabel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterToken'
      tags:
      - server/cluster_token
  /server/cluster_token/{uuid}/refresh:
    put:
      consumes:
      - application/json
      description: Refresh Cluster Token Time
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ClusterToken'
      tags:
      - server/cluster_token
  /server/event:
    get:
      consumes:
      - application/json
      description: Find event
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Event'
            type: array
      tags:
      - server/event
    post:
      consumes:
      - application/json
      description: Create a event
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.Event_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventWithEdges'
      tags:
      - server/event
  /server/event/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a event
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/event
    get:
      consumes:
      - application/json
      description: Get a event
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Event'
      tags:
      - server/event
    put:
      consumes:
      - application/json
      description: Update a event
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Event_update
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.Event_update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Event'
      tags:
      - server/event
  /server/event/{uuid}/edges:
    get:
      consumes:
      - application/json
      description: Get event edges
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierEdge'
      tags:
      - server/event
  /server/event/{uuid}/edges/add:
    put:
      consumes:
      - application/json
      description: addtion event notifier edge
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: NotifierEdges
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.NotifierEdges'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierEdge'
      tags:
      - server/event
  /server/event/{uuid}/edges/sub:
    put:
      consumes:
      - application/json
      description: subtraction event sub notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: NotifierEdges
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.NotifierEdges'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierEdge'
      tags:
      - server/event
  /server/event_notifier/console:
    get:
      consumes:
      - application/json
      description: Find event notifier console
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.EventNotifierConsole'
            type: array
      tags:
      - server/event_notifier
    post:
      consumes:
      - application/json
      description: Create a event notifier console
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: EventNotifierConsole_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierConsole_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierConsole'
      tags:
      - server/event_notifier
  /server/event_notifier/console/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a event notifier console
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/event_notifier
    get:
      consumes:
      - application/json
      description: Get a event notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: event notifier 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierConsole'
      tags:
      - server/event_notifier
    put:
      consumes:
      - application/json
      description: Update a console event notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: EventNotifierConsole_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierConsole_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierConsole'
      tags:
      - server/event_notifier
  /server/event_notifier/rabbitmq:
    get:
      consumes:
      - application/json
      description: Find event notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.EventNotifierRabbitMq'
            type: array
      tags:
      - server/event_notifier
    post:
      consumes:
      - application/json
      description: Create a event notifier rabbitmq
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: EventNotifierRabbitMq_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierRabbitMq_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierRabbitMq'
      tags:
      - server/event_notifier
  /server/event_notifier/rabbitmq/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a event notifier rabbitmq
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/event_notifier
    get:
      consumes:
      - application/json
      description: Get a event notifier rabbitmq
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: event notifier 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierRabbitMq'
      tags:
      - server/event_notifier
    put:
      consumes:
      - application/json
      description: Update a rabbitmq event notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: EventNotifierRabbitMq_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierRabbitMq_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierRabbitMq'
      tags:
      - server/event_notifier
  /server/event_notifier/webhook:
    get:
      consumes:
      - application/json
      description: Find event notifier webhook
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.EventNotifierWebhook'
            type: array
      tags:
      - server/event_notifier
    post:
      consumes:
      - application/json
      description: Create a event notifier webhook
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: EventNotifierWebhook_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierWebhook_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierWebhook'
      tags:
      - server/event_notifier
  /server/event_notifier/webhook/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a event notifier webhook
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/event_notifier
    get:
      consumes:
      - application/json
      description: Get a event notifier webhook
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: event notifier 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierWebhook'
      tags:
      - server/event_notifier
    put:
      consumes:
      - application/json
      description: Update a webhook event notifier
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Event 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: EventNotifierWebhook_create
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.EventNotifierWebhook_create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.EventNotifierWebhook'
      tags:
      - server/event_notifier
  /server/event_notifier_status:
    get:
      consumes:
      - application/json
      description: Find Event Nofitier Status
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.EventNotifierStatus'
            type: array
      tags:
      - server/event_notifier_status
  /server/event_notifier_status/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Event Nofitier Status
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: EventNofitierStatus 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/event_notifier_status
  /server/global_variant:
    get:
      consumes:
      - application/json
      description: Find global_variant
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.GlobalVariant'
            type: array
      tags:
      - server/global_variant
  /server/global_variant/{uuid}:
    get:
      consumes:
      - application/json
      description: Get a global_variant
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: GlobalVariant 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GlobalVariant'
      tags:
      - server/global_variant
    put:
      consumes:
      - application/json
      description: Update global_variant Value
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: GlobalVariant 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqGlobalVariant_Update
        in: body
        name: enviroment
        schema:
          $ref: '#/definitions/v1.HttpReqGlobalVariant_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GlobalVariant'
      tags:
      - server/global_variant
  /server/service:
    get:
      consumes:
      - application/json
      description: Find []Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspService'
            type: array
      tags:
      - server/service
    post:
      consumes:
      - application/json
      description: Create a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqService_Create
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqService_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/service/{service_uuid}/step:
    get:
      consumes:
      - application/json
      description: Find Service Steps
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: ServiceStep 의 service_uuid
        in: path
        name: service_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.ServiceStep'
            type: array
      tags:
      - server/service_step
  /server/service/{service_uuid}/step/{uuid}:
    get:
      consumes:
      - application/json
      description: Get a Service Step
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: ServiceStep 의 service_uuid
        in: path
        name: service_uuid
        required: true
        type: string
      - description: ServiceStep 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ServiceStep'
      tags:
      - server/service_step
  /server/service/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/service
    get:
      consumes:
      - application/json
      description: Get a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/service/{uuid}/result:
    get:
      consumes:
      - application/json
      description: Get a Service with Result
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/session:
    get:
      consumes:
      - application/json
      description: Find Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Session'
            type: array
      tags:
      - server/session
  /server/session/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Session 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/session
    get:
      consumes:
      - application/json
      description: Get a Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Session 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Session'
      tags:
      - server/session
  /server/template:
    get:
      consumes:
      - application/json
      description: Find []template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspTemplate'
            type: array
      tags:
      - server/template
    post:
      consumes:
      - application/json
      description: Create a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate_Create
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplate_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspTemplate'
      tags:
      - server/template
  /server/template/{template_uuid}/command:
    get:
      consumes:
      - application/json
      description: Find template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.TemplateCommand'
            type: array
      tags:
      - server/template_command
    post:
      consumes:
      - application/json
      description: Create a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand_Create
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
  /server/template/{template_uuid}/command/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/template_command
    get:
      consumes:
      - application/json
      description: Get a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
    put:
      consumes:
      - application/json
      description: Update a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplateCommand 의 TemplateUuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand_Update
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
  /server/template/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/template
    get:
      consumes:
      - application/json
      description: Get a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspTemplate'
      tags:
      - server/template
    put:
      consumes:
      - application/json
      description: Update a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqTemplate_Update
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplate_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Template'
      tags:
      - server/template
  /server/template_recipe:
    get:
      description: Find TemplateRecipe
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template Command 의 Method
        in: query
        name: method
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.TemplateRecipe'
            type: array
      tags:
      - server/template_recipe
swagger: "2.0"
