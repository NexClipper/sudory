definitions:
  v1.Client:
    properties:
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Cluster:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Environment:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
      value:
        type: string
    type: object
  v1.Hashset:
    additionalProperties: true
    type: object
  v1.HttpReqAuth:
    properties:
      assertion:
        description: <bearer-token>
        type: string
      client_uuid:
        description: client uuid
        type: string
      client_version:
        description: client version
        type: string
      cluster_uuid:
        description: cluster uuid
        type: string
    type: object
  v1.HttpReqCluster_Create:
    properties:
      name:
        type: string
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
    type: object
  v1.HttpReqCluster_Update:
    properties:
      name:
        type: string
      polling_option:
        additionalProperties: true
        type: object
      summary:
        type: string
    type: object
  v1.HttpReqEnvironment_Update:
    properties:
      value:
        type: string
    type: object
  v1.HttpReqService_ClientSide:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      epoch:
        description: '-1: infinite'
        type: integer
      id:
        type: integer
      interval:
        type: integer
      name:
        type: string
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribe_event:
        description: 서비스 POLL 결과 전달 이벤트 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      type:
        description: '0: once, 1: repeat(epoch, interval)'
        type: integer
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpReqService_Create:
    properties:
      cluster_uuid:
        type: string
      name:
        type: string
      steps:
        items:
          $ref: '#/definitions/v1.HttpReqServiceStep_Create_ByService'
        type: array
      subscribe_event:
        type: string
      summary:
        type: string
      template_uuid:
        type: string
    type: object
  v1.HttpReqServiceStep_Create_ByService:
    properties:
      args:
        additionalProperties: true
        type: object
    type: object
  v1.HttpReqTemplate_Create:
    properties:
      commands:
        items:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Create_ByTemplate'
        type: array
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplate_Update:
    properties:
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Create:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
      template_uuid:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Create_ByTemplate:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      summary:
        type: string
    type: object
  v1.HttpReqTemplateCommand_Update:
    properties:
      args:
        additionalProperties: true
        type: object
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
    type: object
  v1.HttpReqToken_CreateClusterToken:
    properties:
      name:
        type: string
      summary:
        type: string
      user_uuid:
        type: string
    type: object
  v1.HttpReqToken_UpdateLabel:
    properties:
      name:
        type: string
      summary:
        type: string
    type: object
  v1.HttpRspService:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      epoch:
        description: '-1: infinite'
        type: integer
      id:
        type: integer
      interval:
        type: integer
      name:
        type: string
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribe_event:
        description: 서비스 POLL 결과 전달 이벤트 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      type:
        description: '0: once, 1: repeat(epoch, interval)'
        type: integer
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpRspService_ClientSide:
    properties:
      assigned_client_uuid:
        type: string
      cluster_uuid:
        type: string
      created:
        type: string
      deleted:
        type: string
      epoch:
        description: '-1: infinite'
        type: integer
      id:
        type: integer
      interval:
        type: integer
      name:
        type: string
      result:
        description: 실행 결과(정상:'결과', 오류:'오류 메시지')
        type: string
      status:
        type: integer
      step_count:
        type: integer
      step_position:
        type: integer
      steps:
        items:
          $ref: '#/definitions/v1.ServiceStep'
        type: array
      subscribe_event:
        description: 서비스 POLL 결과 전달 이벤트 이름
        type: string
      summary:
        type: string
      template_uuid:
        type: string
      type:
        description: '0: once, 1: repeat(epoch, interval)'
        type: integer
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.HttpRspTemplate:
    properties:
      commands:
        items:
          $ref: '#/definitions/v1.TemplateCommand'
        type: array
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.RagulerPollingOption:
    type: object
  v1.ServiceStep:
    properties:
      args:
        $ref: '#/definitions/v1.Hashset'
      created:
        type: string
      deleted:
        type: string
      ended:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      result:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      service_uuid:
        type: string
      started:
        type: string
      status:
        type: integer
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.Session:
    properties:
      created:
        type: string
      deleted:
        type: string
      expiration_time:
        type: string
      id:
        type: integer
      issued_at_time:
        type: string
      token:
        type: string
      updated:
        type: string
      user_kind:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
  v1.SmartPollingOption:
    properties:
      buzy:
        description: (초)
        type: integer
      idle:
        description: (초)
        type: integer
    type: object
  v1.Template:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      name:
        type: string
      origin:
        type: string
      summary:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.TemplateCommand:
    properties:
      args:
        additionalProperties: true
        type: object
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      result_filter:
        type: string
      sequence:
        type: integer
      summary:
        type: string
      template_uuid:
        type: string
      updated:
        type: string
      uuid:
        type: string
    type: object
  v1.TemplateRecipe:
    properties:
      args:
        type: string
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      summary:
        type: string
      updated:
        type: string
    type: object
  v1.Token:
    properties:
      created:
        type: string
      deleted:
        type: string
      expiration_time:
        type: string
      id:
        type: integer
      issued_at_time:
        type: string
      name:
        type: string
      summary:
        type: string
      token:
        type: string
      updated:
        type: string
      user_kind:
        type: string
      user_uuid:
        type: string
      uuid:
        type: string
    type: object
info:
  contact:
    email: jaehoon@nexclipper.io
    url: https://nexclipper.io
  description: this is a sudory server.
  title: SUDORY
  version: 0.0.1
paths:
  /client/auth:
    post:
      consumes:
      - application/json
      description: Auth a client
      parameters:
      - description: HttpReqAuth
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            x-sudory-client-token:
              description: x-sudory-client-token
              type: string
          schema:
            type: string
      tags:
      - client/auth
  /client/service:
    put:
      consumes:
      - application/json
      description: Poll a Service
      parameters:
      - description: client session token
        in: header
        name: x-sudory-client-token
        required: true
        type: string
      - description: HttpReqService_ClientSide
        in: body
        name: service
        required: true
        schema:
          items:
            $ref: '#/definitions/v1.HttpReqService_ClientSide'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            x-sudory-client-token:
              description: x-sudory-client-token
              type: string
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspService_ClientSide'
            type: array
      tags:
      - client/service
  /server/client:
    get:
      consumes:
      - application/json
      description: Find client
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Client'
            type: array
      tags:
      - server/client
  /server/client/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a client
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Client 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/client
    get:
      consumes:
      - application/json
      description: Get a client
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Client 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Client'
      tags:
      - server/client
  /server/cluster:
    get:
      consumes:
      - application/json
      description: Find cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Cluster'
            type: array
      tags:
      - server/cluster
    post:
      consumes:
      - application/json
      description: Create a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqCluster_Create
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqCluster_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/cluster
    get:
      consumes:
      - application/json
      description: Get a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
    put:
      consumes:
      - application/json
      description: Update a cluster
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqCluster_Update
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqCluster_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}/polling/raguler:
    put:
      consumes:
      - application/json
      description: Update a cluster Polling Reguar
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: RagulerPollingOption
        in: body
        name: polling_option
        required: true
        schema:
          $ref: '#/definitions/v1.RagulerPollingOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/cluster/{uuid}/polling/smart:
    put:
      consumes:
      - application/json
      description: Update a cluster Polling Smart
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Cluster 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: SmartPollingOption
        in: body
        name: polling_option
        required: true
        schema:
          $ref: '#/definitions/v1.SmartPollingOption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Cluster'
      tags:
      - server/cluster
  /server/environment:
    get:
      consumes:
      - application/json
      description: Find Environment
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Environment'
            type: array
      tags:
      - server/environment
  /server/environment/{uuid}:
    get:
      consumes:
      - application/json
      description: Get a Environment
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Environment 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Environment'
      tags:
      - server/environment
    put:
      consumes:
      - application/json
      description: Update Environment Value
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Environment 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqEnvironment_Update
        in: body
        name: enviroment
        schema:
          $ref: '#/definitions/v1.HttpReqEnvironment_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Environment'
      tags:
      - server/environment
  /server/service:
    get:
      consumes:
      - application/json
      description: Find []Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspService'
            type: array
      tags:
      - server/service
    post:
      consumes:
      - application/json
      description: Create a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqService_Create
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqService_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/service/{service_uuid}/step:
    get:
      consumes:
      - application/json
      description: Find Service Steps
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: ServiceStep 의 service_uuid
        in: path
        name: service_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.ServiceStep'
            type: array
      tags:
      - server/service_step
  /server/service/{service_uuid}/step/{uuid}:
    get:
      consumes:
      - application/json
      description: Get a Service Step
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: ServiceStep 의 service_uuid
        in: path
        name: service_uuid
        required: true
        type: string
      - description: ServiceStep 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ServiceStep'
      tags:
      - server/service_step
  /server/service/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/service
    get:
      consumes:
      - application/json
      description: Get a Service
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/service/{uuid}/result:
    get:
      consumes:
      - application/json
      description: Get a Service with Result
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Service 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspService'
      tags:
      - server/service
  /server/session:
    get:
      consumes:
      - application/json
      description: Find Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Session'
            type: array
      tags:
      - server/session
  /server/session/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Session 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/session
    get:
      consumes:
      - application/json
      description: Get a Session
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Session 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Session'
      tags:
      - server/session
  /server/template:
    get:
      consumes:
      - application/json
      description: Find []template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspTemplate'
            type: array
      tags:
      - server/template
    post:
      consumes:
      - application/json
      description: Create a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate_Create
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplate_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspTemplate'
      tags:
      - server/template
  /server/template/{template_uuid}/command:
    get:
      consumes:
      - application/json
      description: Find template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.TemplateCommand'
            type: array
      tags:
      - server/template_command
    post:
      consumes:
      - application/json
      description: Create a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand_Create
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
  /server/template/{template_uuid}/command/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/template_command
    get:
      consumes:
      - application/json
      description: Get a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
    put:
      consumes:
      - application/json
      description: Update a template command
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqTemplateCommand 의 TemplateUuid
        in: path
        name: template_uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqTemplateCommand_Update
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplateCommand_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TemplateCommand'
      tags:
      - server/template_command
  /server/template/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/template
    get:
      consumes:
      - application/json
      description: Get a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspTemplate'
      tags:
      - server/template
    put:
      consumes:
      - application/json
      description: Update a template
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: HttpReqTemplate_Update
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplate_Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Template'
      tags:
      - server/template
  /server/template_recipe:
    get:
      description: Find TemplateRecipe
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Template Command 의 Method
        in: query
        name: method
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.TemplateRecipe'
            type: array
      tags:
      - server/template_recipe
  /server/token:
    get:
      consumes:
      - application/json
      description: Find Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: query  pkg/server/database/prepared/README.md
        in: query
        name: q
        type: string
      - description: order  pkg/server/database/prepared/README.md
        in: query
        name: o
        type: string
      - description: paging pkg/server/database/prepared/README.md
        in: query
        name: p
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Token'
            type: array
      tags:
      - server/token
  /server/token/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server/token
    get:
      consumes:
      - application/json
      description: Get a Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
      tags:
      - server/token
  /server/token/{uuid}/label:
    put:
      consumes:
      - application/json
      description: Update Token Label
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: Token 의 HttpReqToken_UpdateLabel
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqToken_UpdateLabel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
      tags:
      - server/token
  /server/token/cluster:
    post:
      consumes:
      - application/json
      description: Create a Cluster Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: HttpReqToken_CreateClusterToken
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqToken_CreateClusterToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
      tags:
      - server/token
  /server/token/cluster/{uuid}/expire:
    put:
      consumes:
      - application/json
      description: Expire Cluster Token
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
      tags:
      - server/token
  /server/token/cluster/{uuid}/refresh:
    put:
      consumes:
      - application/json
      description: Refresh Cluster Token Time
      parameters:
      - description: client session token
        in: header
        name: x_auth_token
        type: string
      - description: Token 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Token'
      tags:
      - server/token
swagger: "2.0"
