definitions:
  model.Catalogue:
    properties:
      name:
        type: string
    type: object
  model.Catalogues:
    properties:
      items:
        items:
          $ref: '#/definitions/model.Catalogue'
        type: array
    type: object
  model.Cluster:
    properties:
      created:
        type: string
      id:
        type: integer
      name:
        type: string
      updated:
        type: string
    type: object
  model.ReqClient:
    properties:
      cluster_id:
        type: integer
      ip:
        type: string
      machine_id:
        type: string
      port:
        type: integer
    type: object
  model.ReqClientGetService:
    properties:
      cluster_id:
        type: integer
    type: object
  model.ReqCluster:
    properties:
      name:
        type: string
    type: object
  model.ReqService:
    properties:
      cluster_id:
        type: integer
      name:
        type: string
      step:
        items:
          $ref: '#/definitions/model.ReqStep'
        type: array
      step_count:
        type: integer
    type: object
  model.ReqStep:
    properties:
      command:
        type: string
      name:
        type: string
      parameter:
        type: string
      sequence:
        type: integer
    type: object
  model.ReqToken:
    properties:
      key:
        type: string
    type: object
  model.RespService:
    properties:
      cluster_id:
        type: integer
      name:
        type: string
      step:
        items:
          $ref: '#/definitions/model.RespStep'
        type: array
      step_count:
        type: integer
    type: object
  model.RespStep:
    properties:
      command:
        type: string
      name:
        type: string
      parameter:
        type: string
      sequence:
        type: integer
    type: object
  v1.HttpReqTemplate:
    properties:
      api_version:
        description: api version
        type: string
      name:
        description: label name
        type: string
      origin:
        description: |-
          origin
          @example: predefined, userdefined
        type: string
      summary:
        description: label summary
        type: string
      uuid:
        description: UUID
        type: string
    type: object
  v1.HttpRspTemplate:
    properties:
      api_version:
        description: api version
        type: string
      name:
        description: label name
        type: string
      origin:
        description: |-
          origin
          @example: predefined, userdefined
        type: string
      summary:
        description: label summary
        type: string
      uuid:
        description: UUID
        type: string
    type: object
info:
  contact:
    email: jaehoon@nexclipper.io
    url: https://nexclipper.io
  description: this is a sudory server.
  title: SUDORY
  version: 0.0.1
paths:
  /client/regist:
    post:
      consumes:
      - application/json
      description: Regist a Client
      parameters:
      - description: Client의 정보
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/model.ReqClient'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - client
  /client/service:
    put:
      consumes:
      - application/json
      description: Get a Service
      parameters:
      - description: Service의 정보
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/model.ReqClientGetService'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RespService'
      tags:
      - client
  /server/catalogue:
    get:
      description: Get a Catalogues
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Catalogues'
      tags:
      - server
  /server/cluster:
    post:
      consumes:
      - application/json
      description: Create a Cluster
      parameters:
      - description: Cluster의 정보
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/model.ReqCluster'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
  /server/cluster/{id}:
    get:
      consumes:
      - application/json
      description: Get a Cluster
      parameters:
      - description: Cluster의 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Cluster'
      tags:
      - server
  /server/cluster/{id}/token:
    post:
      consumes:
      - application/json
      description: Create a Token
      parameters:
      - description: cluster id
        in: path
        name: id
        required: true
        type: string
      - description: Token의 정보
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.ReqToken'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
  /server/service:
    post:
      consumes:
      - application/json
      description: Create a Service
      parameters:
      - description: Service의 정보
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/model.ReqService'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
  /server/template:
    get:
      consumes:
      - application/json
      description: Get []template
      parameters:
      - description: ReqTemplate 의 Uuid
        in: query
        name: uuid
        type: string
      - description: ReqTemplate 의 Name
        in: query
        name: name
        type: string
      - description: ReqTemplate 의 Origin
        in: query
        name: origin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '[]HttpRspTemplate'
          schema:
            items:
              $ref: '#/definitions/v1.HttpRspTemplate'
            type: array
      tags:
      - server
      - server/template
      - search
    post:
      consumes:
      - application/json
      description: Create a template
      parameters:
      - description: HttpReqTemplates
        in: body
        name: template
        required: true
        schema:
          items:
            $ref: '#/definitions/v1.HttpReqTemplate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
      - server/template
      - create
    put:
      consumes:
      - application/json
      description: Update a template
      parameters:
      - description: HttpReqTemplate
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/v1.HttpReqTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
      - server/template
      - update
  /server/template/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete a template
      parameters:
      - description: HttpReqTemplate 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - server
      - server/template
      - delete
    get:
      consumes:
      - application/json
      description: Get a template
      parameters:
      - description: ReqTemplate 의 Uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.HttpRspTemplate'
      tags:
      - server
      - server/template
      - get
swagger: "2.0"
